name: Test change

on:
  push:
  release:
    types: [created]

jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        python-version: ['cp37-cp37m', 'cp38-cp38']

    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Build linux wheel ${{ matrix.python-version }}
      uses: "./"
      with:
        args: "make-wheel ${{ matrix.python-version}}"
    - name: Test wheel
      uses: "./"
      with:
        args: "test-wheel ${{ matrix.python-version}}"
    - name: "Upload wheel"
      uses: actions/upload-artifact@v1
      with:
        name: linux-${{ matrix.python-version }}
        path: wheelhouse

  osx:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]
        python-version: ['3.7.x', '3.8.x']
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Select Xcode
      run: sudo xcode-select --switch /Applications/Xcode_11.1.app/Contents/Developer
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Build Deps
      run: pip3 install -r build_requirements.txt
    - name: Make wheels
      run: pip3 wheel . -w wheelhouse/
    - name: "Install wheel"
      run: pip3 install wheelhouse/pytubes*.whl
    - name: "Test wheel"
      run: |
        pip3 install numpy pandas pytest
        pip3 install pyarrow || true
        pytest test
    - name: Make export dir
      run: mkdir export && cp wheelhouse/pytubes*.whl export/
    - name: "Upload wheel"
      uses: actions/upload-artifact@v1
      with:
        name: macos-${{ matrix.python-version }}
        path: export
    - name: "Build docs"
      if: matrix.python-version == '3.8.x'
      run: cd docs && make html
    - name: "Upload docs"
      if: matrix.python-version == '3.8.x'
      uses: actions/upload-artifact@v1
      with:
        name: docs
        path: docs/_build/html

  win:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7.x', '3.8.x']
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Build Deps
      run: pip3 install -r build_requirements.txt
    - name: Make wheels
      run: pip3 wheel . -w wheelhouse/
    - name: "Install wheel"
      run: FOR %%W IN (wheelhouse\pytubes*.whl) DO CALL pip3 install %%W
      shell: cmd
    - name: "Test wheel"
      run: |
        pip3 install numpy pyarrow pandas pytest
        pytest test
    - name: Make export dir
      run: |
        mkdir export
        FOR %%W IN (wheelhouse\pytubes*.whl) DO CALL copy %%W export\
      shell: cmd
    - name: "Upload wheel"
      uses: actions/upload-artifact@v1
      with:
        name: win-${{ matrix.python-version }}
        path: export

  collect:
    if: github.event_name == 'release'
    needs: [osx, linux, win]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/download-artifact@master
        with:
          name: macos-3.7.x
          path: wheelhouse/
      - uses: actions/download-artifact@master
        with:
          name: macos-3.8.x
          path: wheelhouse/
      - uses: actions/download-artifact@master
        with:
          name: linux-cp37-cp37m
          path: wheelhouse/
      - uses: actions/download-artifact@master
        with:
          name: linux-cp38-cp38
          path: wheelhouse/
      - uses: actions/download-artifact@master
        with:
          name: win-3.8.x
          path: wheelhouse/
      - uses: actions/download-artifact@master
        with:
          name: win-3.7.x
          path: wheelhouse/
      - name: Create wheel package
        run: tar czf wheels.tgz wheelhouse/*.whl
      - name: Uploade release artifacts
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.url }}
          asset_path: ./wheels.tgz
          asset_name: wheels.tgz
          asset_content_type: application/gzip
